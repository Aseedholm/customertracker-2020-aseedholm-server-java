package com.customertracker.CustomerTracker.Models;

import com.fasterxml.jackson.annotation.JsonIgnore;

import java.sql.Date;
import java.util.ArrayList;
import java.util.List;

import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;

/**
 * This class represents a model for a Customer at Solstice, containing information relevant to a
 * Customer's account.
 */
@Entity
@Table(name = "customers")
public class Customer {
  @Id
  @GeneratedValue(strategy = GenerationType.IDENTITY)
  private Integer id;

  private String firstName;

  private String lastName;

  private String email;

  private boolean active;

  private Integer accountManagerId;

  private String reasonForJoining;

  private Date date;

  @OneToMany(mappedBy = "customer")
  @JsonIgnore
  private List<Account> account;

  /**
   * Constructor constructs a Customer object will all null or -1 values representing an empty
   * Customer object.
   */
  public Customer() {
    this.firstName = null;
    this.lastName = null;
    this.email = null;
    this.active = false;
    this.accountManagerId = null;
    this.reasonForJoining = null;
    this.date = null;
    this.account = new ArrayList<Account>();
  }

  /**
   * Constructor constructs a Customer object and initializes all class variables according to the
   * passed in parameters.
   *
   * @param firstName        a String representing the Customer's first name.
   * @param lastName         a String representing the Customer's last name.
   * @param email            a String representing the Customer's email address.
   * @param active           a boolean representing if the Customer's account is active, true for
   *                         active, false for inactive.
   * @param accountManagerId a Integer representing the ID of the Account Manager for the customer's
   *                         account.
   * @param reasonForJoining a String providing the reason for the customer joining Solstice.
   * @param date             a MySQL data object representing the date and time the customer created
   *                         their account.
   * @param account          a list of Account object representing the account the Customer has.
   */
  public Customer(String firstName, String lastName, String email, boolean active,
                  Integer accountManagerId, String reasonForJoining, Date date, List<Account> account) {
    this.firstName = firstName;
    this.lastName = lastName;
    this.email = email;
    this.active = active;
    this.accountManagerId = accountManagerId;
    this.reasonForJoining = reasonForJoining;
    this.date = date;
    this.account = account;
  }

  /**
   * This method returns the Customer object's ID.
   *
   * @return an Integer representing the Customer's ID.
   */
  public Integer getId() {
    return id;
  }

  /**
   * This method sets the Customer object's ID. This method does not work as the ID is auto
   * generated by the MySQL server.
   *
   * @param id an Integer representing the Customer's ID.
   */
  public void setId(Integer id) {
    this.id = id;
  }

  /**
   * This method returns the Customer object's first name.
   *
   * @return a String representing the Customer's first name.
   */
  public String getFirstName() {
    return firstName;
  }

  /**
   * This method sets the Customer object's first name according to the provided parameter.
   *
   * @param firstName a String representing the Customer's first name.
   */
  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }

  /**
   * This method returns the Customer object's last name.
   *
   * @return a String representing the Customer's last name.
   */
  public String getLastName() {
    return lastName;
  }

  /**
   * This method sets the Customer object's last name according to the provided parameter.
   *
   * @param lastName a String representing the Customer's last name.
   */
  public void setLastName(String lastName) {
    this.lastName = lastName;
  }

  /**
   * This method returns the Customer object's email.
   *
   * @return a String representing the Customer's email address.
   */
  public String getEmail() {
    return email;
  }

  /**
   * This method sets the Customer object's email according to the provided parameter.
   *
   * @param email a String representing the Customer's email.
   */
  public void setEmail(String email) {
    this.email = email;
  }

  /**
   * This method returns the Customer object's active status.
   *
   * @return a boolean representing the Customer's status of having an active or inactive account.
   *         True will be returned for active and false for inactive.
   */
  public boolean isActive() {
    return active;
  }

  /**
   * This method sets the Customer object's active status according to the provided parameter.
   *
   * @param active a boolean representing the Customer's status if they have an active account or
   *               not.
   */
  public void setActive(boolean active) {
    this.active = active;
  }

  /**
   * This method returns the Customer object's Account-Manager-ID.
   *
   * @return an Integer representing the ID of the Account Manager who manages the Customer's
   *         account.
   */
  public Integer getAccountManagerId() {
    return accountManagerId;
  }

  /**
   * This method sets the Customer object's account manager ID according to the provided parameter.
   *
   * @param accountManagerId an Integer representing the Customer's account manager's ID.
   */
  public void setAccountManagerId(Integer accountManagerId) {
    this.accountManagerId = accountManagerId;
  }

  /**
   * This method returns the Customer object's reason for joining.
   *
   * @return a String representing the Customer's reason for joining Solstice.
   */
  public String getReasonForJoining() {
    return reasonForJoining;
  }

  /**
   * This method sets the Customer object's reason for joining according to the provided parameter.
   *
   * @param reasonForJoining a String representing the Customer's reason for signing up with
   *                         Solstice.
   */
  public void setReasonForJoining(String reasonForJoining) {
    this.reasonForJoining = reasonForJoining;
  }

  /**
   * This method returns the Customer object's date/time they created their account.
   *
   * @return a SQL date object representing the date/time the Customer created their account.
   */
  public Date getDate() {
    return date;
  }

  /**
   * This method sets the Customer object's date/time they created their account according to the
   * provided parameter.
   *
   * @param date a SQL date object representing the date/time the Customer created their account.
   */
  public void setDate(Date date) {
    this.date = date;
  }

  /**
   * This method returns the Customer object's associated account object.
   *
   * @return an Account object representing the Customer's account information.
   */
  public List<Account> getAccount() {
    return account;
  }

  /**
   * This method sets the Customer object's Account object.
   *
   * @param account an Account object representing the Customer's account information.
   */
  public void setAccount(List<Account> account) {
    this.account = account;
  }
}
